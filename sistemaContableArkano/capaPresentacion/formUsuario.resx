<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCrearUsuario.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACoAAAAqCAYAAADFw8lbAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAAd0SU1FB+IHAwUIO0jUwhAAAAQmSURBVFhHvZlbiFVVGIDH0XR0HE1fVCqSRIp6
        EUHq0UCDXsKkKIouIAhF+BAaYSaVXZUC6QIWRPeHIqIo6EIRQVBQkUGU0MWXehAqpZd6yOn71vnXtCdm
        n32bPR98s9Zee+3/32efvddeZ81IHSYnJ6OW6mfg+Xg7vozv45t4CC/FCRyNvumYOcFkOSHlRnwNh/ET
        Xo/j+fg5ISeivBJ/xbo8gcuKMXojJ6DchL9hU+7F+SnIXECyz1Pa5vyOmyJMP5Agl1fgSWzLQ7gwBesT
        kjyZ0rXnW1yBEbEHCL4I38OunBUh+4EEZ+NnKVU3er9P1+FXKVU3LouQ/UCC83A2TnRLhOwHEqzGT1Oq
        bmyIkP1AggX4TkrVjVURsj9I8tQgV2u+w/6GpxyY8ib8E9vyNC5OwfqEJKvwFzO2ZHuE6g+S5NJ5ZxuO
        4voUZC4gmRPlv8zckAMRon9IlssHU+r6fI9rizF6JSehHMdPsC6l9yb7ojbLHyIHo/RN9TNWsT8dANSj
        Vo+m/WeEIAvxYaxiIvrn4+bhUtyGb+EfmDmFvlSuwjNxXvHYVnDwfLwHhxLdE2wuRk/iB/dV8CNeg0vi
        2BSjEjsWO1M/F6smKX/joujvFTpsY0OO4MqIYTEz7ix2oH4O7sUvsYrb4hivZN2TPB1lkeex/MoWG6mv
        xZfwBHqlqvgal6H3pF93GR/grbgTyyY9/+CuOJUBNEydIKVJluPj2JQdOIo+OMPuyUcx/eCjPJBaZsbf
        W+vyiaVSqJug7STE3/0XRRyf7mE8hmPR9/7UUs51mEaCBBvrsWq5Zhgf4uqI5RCUmen+cxUln+gjqaWc
        VzE9nHa+AL2/uvAc5vWm4jgpb6OrJvehv/MvxwXRdws6NrtvP36ERVzLGrejT+c3tnTEJzwt3ww2p3EL
        Oga7EqjW7WrfqfbY3odFnAxNuGNP2uyOJ5qv0v/ZaXsd6OswWMTRJp3oF2mzO89iHvd8LRZx/dQrdTd6
        C2zF/KE2o1+7++5Eh64ix3GpHeu82upggvQjjrI4NlY9TAdTSzmv45gduz5EGV8KF0byq1NLOU2Gp5tx
        1I53pc3Z4Ub0heE73qe1DK+i52n+YZOcYzj4KUPFCfHHts4C3u+OIp7stTaU4Ji7C32NvmtDCbvTSWZo
        GEO/Dr++Nr+NitwQMZegs6C2vIH59og/AXVnSf63wzeLMyWfOBdxnSA04eKItxJfwKbHe5IrIobFADem
        NQDba/AS9J8MznLuwAfQ8dJFBd9EL+Ir6AzLadkz6MrKjghjHK+sX7MTjCq8J3fjf1eyjKE7gf2uR3mr
        eG87iXFa5/+W3Pb+9C3jDGpaLOouYTrB8N3tg+Yt5mDut+YQ5NM9tQZAPWoNaHOQx2Qz1H3IXMX2Q/nh
        1A/rB0//RBPqUcuMjPwLBnfSn/ijA6YAAAAASUVORK5CYII=
</value>
  </data>
</root>